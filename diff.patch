diff -x foreground -x movie -x music -x upscale -x script -x scriptja -x scriptpt -x sound -urN /mnt/d/n7e/conf.lua lovegame/conf.lua
--- /mnt/d/n7e/conf.lua	2022-02-04 00:50:38.000000000 -0300
+++ lovegame/conf.lua	2022-09-15 18:16:27.464050000 -0300
@@ -1,10 +1,12 @@
+io.stdout:setvbuf('no')
+
 function love.conf(t)
 	t.identity = "Never7Eternal"
 	t.window.title = "Never7 -the end of infinity- Eternal Edition v0.4"
 	t.window.icon = "icon-high.png"
-	t.window.width = 800
-	t.window.height = 600
-	t.window.resizable = true
+	t.window.width = 0
+	t.window.height = 0
+	t.window.fullscreen = true
 	t.gammacorrect = false
 	t.accelerometerjoystick = false
 	t.modules.data = false
diff -x foreground -x movie -x music -x upscale -x script -x scriptja -x scriptpt -x sound -urN /mnt/d/n7e/main.lua lovegame/main.lua
--- /mnt/d/n7e/main.lua	2022-02-26 23:04:20.000000000 -0300
+++ lovegame/main.lua	2022-09-15 18:05:11.461687600 -0300
@@ -17,9 +17,9 @@
 love.filesystem.load("tips.lua")()
 love.filesystem.load("text_input.lua")()
 love.filesystem.load("append_editor.lua")()
+love.filesystem.load("touch_controls.lua")()
 
 assets = {}
-
 local fsread = love.filesystem.read
 function love.filesystem.read(path)
 	if path:match("^script/") then
@@ -49,19 +49,17 @@
 	return loaded_snds[path]
 end
 
+
 function updatewinmode()
-	if gvars.winmode == "0" then
-		love.window.setMode(800, 600, {resizable = true, fullscreen = false})
-	elseif gvars.winmode == "1" then
-		love.window.setMode(0, 0, {resizable = false, fullscreen = true})
-	elseif gvars.winmode == "2" then
-		love.window.setMode(800, 600, {resizable = false, fullscreen = false})
-	elseif gvars.winmode == "3" then
-		love.window.setMode(1600, 1200, {resizable = false, fullscreen = false})
-	end
 end
 
 function love.load()
+	-- touch support
+	begin_scroll_y = nil
+	begin_y = nil
+	end_y = nil
+	doing_touch = false
+	-- loading instructions
 	love.keyboard.setKeyRepeat(true)
 	love.graphics.setDefaultFilter("linear", "linear")
 	font = love.graphics.newFont(font_filename, 26)
@@ -86,6 +84,94 @@
 	append_editor_load()
 end
 
+function tablelength(T)
+  local count = 0
+  for _ in pairs(T) do count = count + 1 end
+  return count
+end
+
+touches_amount = 0
+function love.touchpressed(id, x, y, dx, dy, pressure)
+	if doing_touch == false then
+		begin_y = y
+		begin_scroll_y = y
+		doing_touch = true
+	end
+
+	touches_amount = tablelength(love.touch.getTouches())
+end
+
+local is_pressing_up = false
+local is_pressing_down = false
+
+function love.touchmoved(id, x, y, dx, dy, pressure)
+	if touches_amount > 1 then
+		return
+	end
+	-- bg pan
+	if y and begin_y then
+		if y > begin_y then
+			is_pressing_up = true
+			is_pressing_down = false
+		elseif begin_y > y then
+			is_pressing_down = true
+			is_pressing_up = false
+		else
+			is_pressing_up = false
+			is_pressing_down = false
+		end
+	end
+	if state == BACKLOG or state == PLAYING_LOG or state == FLOW_MENU then
+		if begin_scroll_y then
+			should_scroll = 0
+			scroll_factor = 0.5
+			if state == BACKLOG then
+				scroll_factor = (20 / tablelength(backlog)) * 0.100
+			end
+
+			if (y - begin_scroll_y) - scroll_factor > 0 then
+				should_scroll = 1
+			elseif (y - begin_scroll_y) - scroll_factor < -scroll_factor then
+				should_scroll = -1
+			else
+				should_scroll = 0
+			end
+
+			if state == BACKLOG then
+				scroll_backlog(should_scroll)
+			elseif state == FLOW_MENU then
+				flow_menu_scroll(should_scroll)
+			elseif state == PLAYING_LOG then
+				playing_log_scroll(should_scroll)
+			end
+			begin_scroll_y = y
+		end
+	end
+
+end
+
+function love.touchreleased(id, x, y, dx, dy, pressure)
+	end_y = y
+	if doing_touch == true then
+		if begin_y == end_y and touches_amount == 1 then
+			love.mousepressed(x, y, 1)
+		end
+
+		if touches_amount == 2 then
+			love.keypressed("escape")
+		end
+
+		begin_scroll_y = nil
+		begin_y = nil
+		end_y = nil
+		doing_touch = false
+		touches_amount = 0
+		is_pressing_up = false
+		is_pressing_down = false
+	end
+end
+
+
 DELAYING = 0
 SCROLLING = 1
 WAITING = 2
@@ -194,7 +280,7 @@
 		delay = delay + 60
 		state = SCROLLING
 	end
-	if vars.autoscroll == "0" and love.keyboard.isDown("lctrl") and (skippable or gvars.skip ~= "0") then
+	if vars.autoscroll == "0" and (love.keyboard.isDown("lctrl") or is_touch_skipping()) and (skippable or gvars.skip ~= "0") then
 		advance()
 	end
 	if type(bgm) == "string" then
@@ -237,7 +323,7 @@
 
 mousex, mousey = 0, 0
 function love.mousemoved(x, y)
-	local sw, sh = love.graphics.getPixelDimensions()
+	local sw, sh = love.graphics.getDimensions()
 	local w = sh * 800 / 600
 	if w > sw then
 		local h = sw * 600 / 800
@@ -264,9 +350,13 @@
 end
 
 local last_input = -10
-function love.mousepressed(x, y, button)
+function love.mousepressed(x, y, button, istouch)
+	if istouch == true then
+		return
+	end
 	last_input = love.timer.getTime()
 	if button == 1 then
+		handle_click_event()
 		hiding_text_box = false
 		if state == POLLING and is_polling_for("click") then
 			vars.setting = "1"
@@ -467,6 +557,7 @@
 function love.quit()
 	save_system()
 	save_game("auto")
+	print(is_menu)
 	print("quit safely")
 end
 
@@ -666,6 +757,8 @@
 	if is_waiting_for_load() then
 		return
 	end
+	-- Make sure game elements are shown if certain area is obstructed by screen notch or even the system ui
+	local safe_x = love.window.getSafeArea()
 	wide_mode = gvars.unlockaspect ~= "0" or wide_forcing
 	wide_forcing = false
 	vars.fps = love.timer.getFPS()
@@ -677,7 +770,7 @@
 		love.graphics.clear()
 	end
 	love.graphics.push()
-	local sw, sh = love.graphics.getPixelDimensions()
+	local sw, sh = love.graphics.getDimensions()
 	local w = sh * 800 / 600
 	if w > sw then
 		local h = sw * 600 / 800
@@ -699,8 +792,17 @@
 		screenscale = sh / 600
 		love.graphics.scale(screenscale)
 		if wide_mode then
-			screen_left = -x / screenscale
-			screen_right = 800 + x / screenscale
+			local orientation = love.window.getDisplayOrientation()
+			if orientation == "landscape" then
+				screen_left = (-x + safe_x) / screenscale
+			else
+				screen_left = -x / screenscale
+			end
+			if orientation == "landscapeflipped" then
+				screen_right = (800 + x) - safe_x / screenscale
+			else
+				screen_right = 800 + x / screenscale 
+			end
 			screen_top = 0
 			screen_bottom = 600
 		else
@@ -732,10 +834,10 @@
 
 	local bg_crop_panned_this_frame
 	if state == WAITING or state == SCROLLING then
-		if love.keyboard.isDown("down") or love.keyboard.isDown("s") then
+		if love.keyboard.isDown("down") or love.keyboard.isDown("s") or is_pressing_down then
 			bg_crop_pan = lint(bg_crop_pan, 1, dt * 16)
 			bg_crop_panned_this_frame = true
-		elseif love.keyboard.isDown("up") or love.keyboard.isDown("w") then
+		elseif love.keyboard.isDown("up") or love.keyboard.isDown("w") or is_pressing_up then
 			bg_crop_pan = lint(bg_crop_pan, 0, dt * 16)
 			bg_crop_panned_this_frame = true
 		end
@@ -1224,6 +1326,14 @@
 	end
 end
 
+function love.focus(focused)
+	if focused == false and gvars.autosave == "1" then
+		print("auto saving since the game is unfocused")
+		save_system()
+		save_game("auto")
+	end
+end
+
 function love.lowmemory()
 	collectgarbage()
 	save_system()
diff -x foreground -x movie -x music -x upscale -x script -x scriptja -x scriptpt -x sound -urN /mnt/d/n7e/middleman.lua lovegame/middleman.lua
--- /mnt/d/n7e/middleman.lua	2022-02-25 22:16:38.000000000 -0300
+++ lovegame/middleman.lua	2022-09-11 12:13:21.633158700 -0300
@@ -23,6 +23,7 @@
 end
 
 function middleman_mouse_moved(x, y)
+	touch_set_mouse_pos(x, y)
 	if guimode() == "pc" then
 		n7_mouse_moved(x, y)
 	elseif guimode() == "psp" then
@@ -686,4 +687,5 @@
 			particle(864, p, particle_komore, 0, 0)
 		end
 	end
+	draw_touch_controls()
 end
\ No newline at end of file
diff -x foreground -x movie -x music -x upscale -x script -x scriptja -x scriptpt -x sound -urN /mnt/d/n7e/n7.lua lovegame/n7.lua
--- /mnt/d/n7e/n7.lua	2022-02-26 19:32:04.000000000 -0300
+++ lovegame/n7.lua	2022-08-21 17:53:52.498612800 -0300
@@ -223,38 +223,6 @@
 	end
 end
 
-local day_intro_shader = love.graphics.newShader([[#define SIZE 0.15
-uniform float effect_param;
-bool side(vec2 a, vec2 b, vec2 c) {
-	return ((b.x - a.x)*(c.y - a.y) - (b.y - a.y)*(c.x - a.x)) > 0.0;
-}
-float line_dist(vec2 pt1, vec2 pt2, vec2 testPt) {
-  vec2 lineDir = pt2 - pt1;
-  vec2 perpDir = vec2(lineDir.y, -lineDir.x);
-  vec2 dirToPt1 = pt1 - testPt;
-  return abs(dot(normalize(perpDir), dirToPt1));
-}
-vec4 effect(vec4 color, Image tex, vec2 uv, vec2 screen_coords) {
-	vec2 iuv = vec2(uv.x, 1.0 - uv.y * 600 / 800);
-	vec2 t1 = vec2(effect_param, 1.0);
-	vec2 t2 = vec2(1.0, effect_param);
-	vec2 b1 = vec2(effect_param - SIZE, 1.0);
-	vec2 b2 = vec2(1.0, effect_param - SIZE);
-	if(side(t1, t2, iuv)) {
-		return vec4(0.0, 0.0, 0.0, 1.0);
-	} else if(side(b1, b2, iuv)) {
-		if(iuv.x < effect_param || iuv.y < effect_param) {
-			float t = 1.0 - clamp(line_dist(t1, t2, iuv) / min(SIZE, 1.0 - effect_param) + 0.25, 0.0, 1.0);
-			t = 1.0 - t * t;
-			return Texel(tex, uv) * vec4(t, t, t, 1);
-		} else {
-			float t = line_dist(b1, b2, iuv) / SIZE / 2.0 + 0.5;
-			return vec4(t, t, t, 1);
-		}
-	} else {
-		return Texel(tex, uv);
-	}
-}]], nil)
 
 function n7_draw_day_intro()
 	love.graphics.setColor(1, 1, 1, 1)
@@ -271,8 +239,9 @@
 	elseif i > 1 then
 		i = 1
 	end
-	day_intro_shader:send("effect_param", i * 3 - 2)
-	love.graphics.setShader(day_intro_shader)
+	-- purposefully broken shader, game is unable to run with this
+	-- day_intro_shader:send("effect_param", i * 3 - 2)
+	-- love.graphics.setShader(day_intro_shader)
 	love.graphics.push()
 	bg_fit_apply()
 	love.graphics.draw(calendar_bg, 0, 0, 0, 0.5)
diff -x foreground -x movie -x music -x upscale -x script -x scriptja -x scriptpt -x sound -urN /mnt/d/n7e/own/settings.scr lovegame/own/settings.scr
--- /mnt/d/n7e/own/settings.scr	2022-02-27 00:53:20.000000000 -0300
+++ lovegame/own/settings.scr	2022-09-10 17:49:38.464284700 -0300
@@ -17,6 +17,12 @@
 label game
 setvar selected = sel
 setvar skipstr = "Only Read"
+if autosave == 0
+	setvar autosavestr = "Off"
+fi
+if autosave == 1
+	setvar autosavestr = "On"
+fi
 if skip == 1
 	setvar skipstr = "All"
 fi
@@ -47,7 +53,7 @@
 if text_speed == 5
 	setvar spdstr = "Instant"
 fi
-menu <Back|%Fast-Forward Mode - $skipstr|%Instant Skip Mode - $iskipstr|%Text Speed - $spdstr|%Language - $langstr|%VLR Mode - $vlrmode_toggle|%Debug Mode - $debugmode_toggle
+menu <Back|%Fast-Forward Mode - $skipstr|%Instant Skip Mode - $iskipstr|%Text Speed - $spdstr|%Language - $langstr|%VLR Mode - $vlrmode_toggle|Auto Save - $autosavestr|%Debug Mode - $debugmode_toggle
 if selected == 1
 	setvar sel = 0
 	goto root
@@ -89,9 +95,15 @@
     gsetvar vlrmode = 0
 fi
 if selected == 7
-	gsetvar debugmode toggle
+	gsetvar autosave toggle
 fi
 if selected == 107
+	gsetvar autosave = 1
+fi
+if selected == 8
+	gsetvar debugmode toggle
+fi
+if selected == 108
     gsetvar debugmode = 0
 fi
 setvar sel = selected
@@ -185,18 +197,6 @@
 
 label visual
 setvar selected = sel
-if winmode == 0
-	setvar modestr = "Resizable"
-fi
-if winmode == 1
-	setvar modestr = "Fullscreen"
-fi
-if winmode == 2
-	setvar modestr = "800x600"
-fi
-if winmode == 3
-	setvar modestr = "1600x1200"
-fi
 if bgfit == 0
 	setvar widestr = "Keep"
 fi
@@ -215,7 +215,7 @@
 fi
 setvar sdcstyle = dcstyle
 setvar sdcstyle + 1
-menu <Back|%Window Mode - $modestr|%Unlock Aspect Ratio - $unlockaspect_toggle|%Background Fit - $widestr|%Interface - $guistr|%Dreamcast Style - $sdcstyle
+menu <Back|%Unlock Aspect Ratio - $unlockaspect_toggle|%Background Fit - $widestr|%Interface - $guistr|%Dreamcast Style - $sdcstyle
 if setting == 0
 	setvar setting = 1
 fi
@@ -224,33 +224,26 @@
     goto root
 fi
 if selected == 2
-    gsetvar winmode + setting
-	gsetvar winmode cycle 0 3
-fi
-if selected == 102
-	gsetvar winmode = 0
-fi
-if selected == 3
 	gsetvar unlockaspect toggle
 fi
 if selected == 103
 	gsetvar unlockaspect = 0
 fi
-if selected == 4
+if selected == 3
     gsetvar bgfit + setting
 	gsetvar bgfit cycle 0 2
 fi
 if selected == 104
 	gsetvar bgfit = 0
 fi
-if selected == 5
+if selected == 4
 	gsetvar guimode + setting
 	gsetvar guimode cycle 0 2
 fi
 if selected == 105
 	gsetvar guimode = 0
 fi
-if selected == 6
+if selected == 5
     gsetvar dcstyle + setting
 	gsetvar dcstyle cycle 0 12
 fi
@@ -258,4 +251,4 @@
 	gsetvar dcstyle = 0
 fi
 setvar sel = selected
-goto visual
+goto visual
\ No newline at end of file
diff -x foreground -x movie -x music -x upscale -x script -x scriptja -x scriptpt -x sound -urN /mnt/d/n7e/saving.lua lovegame/saving.lua
--- /mnt/d/n7e/saving.lua	2022-02-26 21:09:30.000000000 -0300
+++ lovegame/saving.lua	2022-09-10 18:25:26.559224400 -0300
@@ -92,12 +92,14 @@
 function load_system()
 	if love.filesystem.getInfo("system.dat") then
 		gvars = love.filesystem.load("system.dat")()
+		print(serialize(gvars))
 		gvars.guimode = ({dc = "0", pc = "1", psp = "2"})[gvars.guimode]
 		gvars.ost = ({psp = "0", pc = "1"})[gvars.ost]
 		gvars.videos = ({psp = "0", pc = "1"})[gvars.videos]
 		gvars.winmode = ({res = "0", fs = "1", ["800x600"] = "2", ["1600x1200"] = "3"})[gvars.winmode] or "0"
 		gvars.language = ({en = "0", ja = "1", pt = "2"})[gvars.language] or "0"
 		gvars.text_speed = ({["50"] = "0", ["100"] = "1", ["200"] = "2", ["300"] = "3", ["400"] = "4", ["instant"] = "5"})[gvars.text_speed] or "1"
+		gvars.autosave = gvars.autosave or "1"
 		love.audio.setVolume(tonumber(gvars.vol) / 100)
 		updatewinmode()
 		vars_meta.__index = gvars
@@ -117,6 +119,7 @@
 	gvars2.winmode = ({"res", "fs", "800x600", "1600x1200"})[tonumber(gvars.winmode) + 1]
 	gvars2.language = ({"en", "ja", "pt"})[tonumber(gvars.language) + 1]
 	gvars2.text_speed = ({"50", "100", "200", "300", "400", "instant"})[tonumber(gvars.text_speed) + 1]
+	gvars2.autosave = ({"0", "1"})[tonumber(gvars.autosave)]
 	write_save(-1, gvars2)
 end
 
diff -x foreground -x movie -x music -x upscale -x script -x scriptja -x scriptpt -x sound -urN /mnt/d/n7e/scripting.lua lovegame/scripting.lua
--- /mnt/d/n7e/scripting.lua	2022-02-27 02:15:24.000000000 -0300
+++ lovegame/scripting.lua	2022-09-10 17:42:35.902334600 -0300
@@ -1,7 +1,7 @@
 local cmds = {}
 cmdi = 1
 vars = {selected = "0"}
-gvars = {vol = "100", bgmvol = "50", sevol = "100", voicevol = "100", guivol = "100", skip = "0", debugmode = "0", language = "0", text_speed = "1"}
+gvars = {autosave = "1", vol = "100", bgmvol = "50", sevol = "100", voicevol = "100", guivol = "100", skip = "0", debugmode = "0", language = "0", text_speed = "1"}
 gdirty = false
 stack = {}
 
@@ -14,6 +14,7 @@
 setmetatable(gvars, gvars_meta)
 setmetatable(vars, vars_meta)
 
+
 local function parse_message(text)
 	local cmds = {}
 	local cmd = ""
@@ -746,17 +747,7 @@
 				gvars[cmd[2]] = (gvars[cmd[2]] ~= "0") and "0" or "1"
 			end
 			love.audio.setVolume(tonumber(gvars.vol) / 100)
-			if cmd[2] == "winmode" then
-				if gvars.winmode == "0" then
-					love.window.setMode(0, 0, {resizable = true, fullscreen = false})
-				elseif gvars.winmode == "1" then
-					love.window.setMode(0, 0, {resizable = false, fullscreen = true})
-				elseif gvars.winmode == "2" then
-					love.window.setMode(800, 600, {resizable = false, fullscreen = false})
-				elseif gvars.winmode == "3" then
-					love.window.setMode(1600, 1200, {resizable = false, fullscreen = false})
-				end
-			elseif cmd[2] == "ost" and bgm then
+			if cmd[2] == "ost" and bgm then
 				if gvars.ost == "0" or bgm_filename:find("2[67]") then
 					gvars.bgmvol = tostring(math.floor(tonumber(gvars.bgmvol) * 50 / 100))
 				else
diff -x foreground -x movie -x music -x upscale -x script -x scriptja -x scriptpt -x sound -urN /mnt/d/n7e/touch_controls.lua lovegame/touch_controls.lua
--- /mnt/d/n7e/touch_controls.lua	1969-12-31 21:00:00.000000000 -0300
+++ lovegame/touch_controls.lua	2022-09-11 12:32:52.799512400 -0300
@@ -0,0 +1,116 @@
+local click_interval = 0.5
+
+function should_show_controls()
+	return cur_text and vars.thinking ~= "1" 
+	and state ~= BACKLOG 
+	and state ~= HELP 
+	and state ~= MAP
+	and state ~= CHOICE
+	and vars.filename ~= "main.scr"
+	and vars.filename ~= "save.scr"
+	and vars.filename ~= "load.scr"
+	and not hiding_text_box
+	and not is_menu
+end
+local x_pos = 800 - 90
+local y_pos = 0
+
+function touch_set_mouse_pos(x, y)
+	mouse_x = x
+	mouse_y = y
+end
+mouse_y = 0
+mouse_x = 0
+local shadow_offset = 3
+local backlog_offset = 110
+local pause_offset = 205
+
+function is_skippable()
+	return vars.autoscroll == "0" and skippable or gvars.skip ~= "0"
+end
+
+-- i should refactor this function someday
+function draw_touch_controls()
+	if should_show_controls() then
+		if guimode() == "dc" then
+			y_pos = 370 - n7_dc_textbox_bounds() + 20
+			x_pos = 800 - 90
+		elseif guimode() == "pc" then
+			y_pos = 420 - n7_textbox_bounds()
+			x_pos = 800 - 90
+		elseif guimode() == "psp" then
+			y_pos = 435 - n7_psp_textbox_bounds()
+			x_pos = 800 - 70
+		end
+		love.graphics.push()
+		-- sombras azuis e pretas
+		if is_skippable() then
+			if is_touch_clicking(0, 60) then
+				love.graphics.setColor(0, 0, 255)
+				love.graphics.printf("Skip", x_pos + shadow_offset, y_pos + shadow_offset, 60, "center")
+			else
+				love.graphics.setColor(0, 0, 0)
+				love.graphics.printf("Skip", x_pos + shadow_offset, y_pos + shadow_offset, 60, "center")
+			end
+		else
+			love.graphics.setColor(0, 0, 0)
+			love.graphics.printf("Skip", x_pos, y_pos, 60, "center")
+		end
+
+		if is_touch_clicking(backlog_offset, 100) then
+			love.graphics.setColor(0, 0, 255)
+			love.graphics.printf("Backlog", x_pos - backlog_offset + shadow_offset, y_pos + shadow_offset, 100, "center")
+		else
+			love.graphics.setColor(0, 0, 0)
+			love.graphics.printf("Backlog", x_pos - backlog_offset + shadow_offset, y_pos + shadow_offset, 100, "center")
+		end
+
+		if is_touch_clicking(pause_offset, 85) then
+			love.graphics.setColor(0, 0, 255)
+			love.graphics.printf("Pause", x_pos - pause_offset + shadow_offset, y_pos + shadow_offset, 100, "center")
+		else
+			love.graphics.setColor(0, 0, 0)
+			love.graphics.printf("Pause", x_pos - pause_offset + shadow_offset, y_pos + shadow_offset, 100, "center")
+		end
+		
+		love.graphics.setColor(255, 255, 255)
+		if is_skippable() then
+			love.graphics.printf("Skip", x_pos, y_pos, 60, "center")
+		end
+		love.graphics.printf("Backlog", x_pos - backlog_offset, y_pos, 100, "center")
+		love.graphics.printf("Pause", x_pos - pause_offset, y_pos, 100, "center")
+		love.graphics.pop()
+	end
+end
+
+function is_touch_clicking(offset, width)
+	return mouse_x >= x_pos - offset and (x_pos - offset) + width > mouse_x
+		and mouse_y >= y_pos and y_pos + 50 > mouse_y
+end
+
+function is_touch_skipping()
+	if x_pos and y_pos and should_show_controls() then
+		return is_touch_clicking(0, 60) and (touches_amount == 1 or love.mouse.isDown(1))
+	end
+end
+
+function handle_click_event()
+	if should_show_controls() then
+		print(string.format("input: %s, %s", mouse_x, mouse_y))
+		print(string.format("offset: %s, %s", x_pos, y_pos))
+		-- Instant skip/fast forward
+		if is_touch_clicking(0, 50) then
+			local time = love.timer.getTime()
+			if last_skip_press and time <= last_skip_press + click_interval then
+				love.keypressed("k")
+			end
+			last_skip_press = time
+		end
+		if is_touch_clicking(backlog_offset, 100) then
+			love.keypressed("b")
+		end
+		if is_touch_clicking(pause_offset, 85) then
+			love.keypressed("escape")
+		end
+	end
+end
\ No newline at end of file
